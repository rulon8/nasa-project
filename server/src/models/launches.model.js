const launchesModel = require('./launches.mongo');

const launches = new Map();

// Autogenerated id for flight numbers
let latestFlightNumber = 100;

const launch = {
  flightNumber: 100,
  mission: 'Kepler Exploration X',
  rocket: 'Explorer IS1',
  launchDate: new Date('December 27, 2030'),
  target: 'Kepler-442 b',
  customers: ['ZTM', 'NASA'],
  upcoming: true,
  success: true,
};

saveLaunch(launch);

function existsLaunchWithId(launchId) {
  return launches.has(launchId);
}

async function getLaunches() {
  return await launchesModel.find({}, {
    '__v': 0,
    '_id': 0,
  });
}

async function saveLaunch(launch) {
  await launchesModel.updateOne({
    flightNumber: launch.flightNumber,
  },
  launch,
  {
    upsert: true,
  });
}

/** 
 * Add new launch to launches map, with autogenerated
 * flight number and default values for other properties.
 **/
function addLaunch(launch) {
  latestFlightNumber++;
  launches.set(
    latestFlightNumber,
    Object.assign(launch, {
      flightNumber: latestFlightNumber,
      customers: ['ZTM', 'NASA'],
      upcoming: true,
      success: true,
    })
  );
}

// Mark launch as aborted. Does NOT delete the launch.
function abortLaunchById(launchId) {
  const aborted = launches.get(launchId);
  aborted.upcoming = false;
  aborted.success = false;
  return aborted;
}

module.exports = {
  getLaunches,
  addLaunch,
  existsLaunchWithId,
  abortLaunchById
};